<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=9"/>
		<meta name="generator" content="Doxygen 1.8.11"/>
		<title>C++: Tree.hpp Source File</title>
		<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
		<script type="text/javascript" src="../../jquery.js"></script>
		<script type="text/javascript" src="../../dynsections.js"></script>
		<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
		<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
		<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
		<link href="../../doxystyle.css" rel="stylesheet" type="text/css"/>
	</head>
	<body>
		<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
			<div id="titlearea">
				<table cellspacing="0" cellpadding="0">
					<tbody>
						<tr style="height: 56px;">
							<td id="projectalign" style="padding-left: 0.5em;">
								<div id="projectname">C++
									&#160;<span id="projectnumber">2.0</span>
								</div>
								<div id="projectbrief">My own C++ features</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<?php
				$text = "Generated on Wed Aug 8 2018 09:57:28 for C++ by";
				$text = substr($text, 0, sizeof($text) - 4);
				$tmp = substr($text, 17);
				$tmp = substr($tmp, 0, strpos($tmp, " for"));
				$lastModif = date("l jS \of F Y \a\\t H:i:s", strtotime($tmp));
			?>
		<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.php"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('db/d3a/a00040_source.php','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Tree.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../db/d3a/a00040.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef HEADER_CPP_TREE</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define HEADER_CPP_TREE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/d1b/a00015.php">C++/defines.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">   13</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0">   16</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0">TREE_SORT</a> {</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">   17</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a>,</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0ac09f77dd64a2d5dedf24b5835d9eaa5a">   18</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0ac09f77dd64a2d5dedf24b5835d9eaa5a">DESC</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;};</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">   21</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">TREE_DIRECTION</a> {</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06aec8379af7490bb9eaaf579cf17876f38">   22</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06aec8379af7490bb9eaaf579cf17876f38">RIGHT</a>,</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06adb45120aafd37a973140edee24708065">   23</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06adb45120aafd37a973140edee24708065">LEFT</a>,</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06ac157bdf0b85a40d2619cbc8bc1ae5fe2">   24</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06ac157bdf0b85a40d2619cbc8bc1ae5fe2">NONE</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;};</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php">   31</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node</a> {</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">   32</a></span>&#160;    T <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">   33</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#a6faa1b5c8a9e19348d0bfef6232c90cb">   35</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../db/d3a/a00040.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">   37</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">   38</a></span>&#160;    <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#a05b65486fa381f9881b8ea58c13382ad">   49</a></span>&#160;<a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">TREE_DIRECTION</a> <a class="code" href="../../db/d3a/a00040.php#a05b65486fa381f9881b8ea58c13382ad">treeAscSorter</a>(std::pair&lt;T, NodeWeight&gt; datas, std::pair&lt;T, NodeWeight&gt; nodeDatas){</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">auto</span> w1 = datas.second;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">auto</span> w2 = nodeDatas.second;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span>(w1 &lt; w2){</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(w1 &gt; w2){</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa21507b40c80068eda19865706fdc2403">RIGHT</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693">NONE</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../db/d3a/a00040.php#adcf4acfe617e3974a5ba668de737b80c">   70</a></span>&#160;<a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">TREE_DIRECTION</a> <a class="code" href="../../db/d3a/a00040.php#adcf4acfe617e3974a5ba668de737b80c">treeDescSorter</a>(std::pair&lt;T, NodeWeight&gt; datas, std::pair&lt;T, NodeWeight&gt; nodeDatas){</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> w1 = datas.second;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> w2 = nodeDatas.second;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span>(w1 &gt; w2){</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(w1 &lt; w2){</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa21507b40c80068eda19865706fdc2403">RIGHT</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693">NONE</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php">   88</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d5f/a00064.php">Tree</a> {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a38efd4e0201ba5596f5159f308851772">   90</a></span>&#160;        <a class="code" href="../../df/d5f/a00064.php#a38efd4e0201ba5596f5159f308851772">Tree</a>(<a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0">TREE_SORT</a> sorting = <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a>) :</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            root(nullptr)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            this-&gt;envoid();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            deleter = &amp;treeDeleter;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span>(sorting == <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a>){ comparator = &amp;<a class="code" href="../../db/d3a/a00040.php#a05b65486fa381f9881b8ea58c13382ad">treeAscSorter</a>; }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">else</span> { comparator = &amp;<a class="code" href="../../db/d3a/a00040.php#adcf4acfe617e3974a5ba668de737b80c">treeDescSorter</a>; }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            copier = &amp;copyData;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a04affc46d89a0ef5d517ab685c9c346e">   99</a></span>&#160;        <a class="code" href="../../df/d5f/a00064.php#a04affc46d89a0ef5d517ab685c9c346e">~Tree</a>(){</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            freeTree(root);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a193fd2684c987f8e85ea9c1ed12badf7">  109</a></span>&#160;        std::pair&lt;Node&lt;T&gt;*, std::string&gt; <a class="code" href="../../df/d5f/a00064.php#a193fd2684c987f8e85ea9c1ed12badf7">find</a>(T value){</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">if</span>(!root-&gt;initialized){</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">return</span> std::make_pair(root, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            std::string path{<span class="stringliteral">&quot;&quot;</span>};</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keyword">auto</span> node = finder(value, root, path);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">return</span> std::make_pair(node, path);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#af0c07b62a0dfbac020a70d29e3572644">  127</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../df/d5f/a00064.php#af0c07b62a0dfbac020a70d29e3572644">getRightCount</a>(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">if</span>(node == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordtype">size_t</span> i{1};</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">while</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                node = node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                i++;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">return</span> i;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a6f70313aed640245e4ebba746e973ef9">  148</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../df/d5f/a00064.php#a6f70313aed640245e4ebba746e973ef9">getLeftCount</a>(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">if</span>(node == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordtype">size_t</span> i{1};</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">while</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                node = node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                i++;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">return</span> i;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a5389c9acc029d22f38e44dbe66d0d556">  164</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#a5389c9acc029d22f38e44dbe66d0d556">print</a>(){</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            this-&gt;applyForEach(&amp;printNode);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            std::cout &lt;&lt; std::endl;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#aa801df9f48ce2feda42ea73f1cc6be1e">  175</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#aa801df9f48ce2feda42ea73f1cc6be1e">applyForEach</a>(<span class="keywordtype">void</span>(*func)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*, <span class="keywordtype">long</span> <span class="keywordtype">int</span>)){</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            this-&gt;GRD(root, func, 0);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a3ff0552b5501fcbee3dfafbe289966d2">  183</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../df/d5f/a00064.php#a3ff0552b5501fcbee3dfafbe289966d2">height</a>(){</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">return</span> this-&gt;height(root);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#ad6a4bc5d0dc000f77acfbeafaddc1672">  193</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#ad6a4bc5d0dc000f77acfbeafaddc1672">insert</a>(std::pair&lt;T, NodeWeight&gt; datas){</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordtype">bool</span> created{<span class="keyword">false</span>};</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            T <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> = datas.first;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = datas.second;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            </div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span>(!root-&gt;initialized){</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                root-&gt;values = <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                root-&gt;weight = <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                root-&gt;initialized = <span class="keyword">true</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keyword">auto</span> node = root;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">while</span>(!created){</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">if</span>(this-&gt;comparator(datas, std::make_pair(node-&gt;values, node-&gt;weight)) == <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</a>){</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    <span class="keywordflow">if</span>(node-&gt;left == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        node-&gt;left = this-&gt;createChild(values, weight);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        created = <span class="keyword">true</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        node = node-&gt;left;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(this-&gt;comparator(datas, std::make_pair(node-&gt;values, node-&gt;weight)) == <a class="code" href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa21507b40c80068eda19865706fdc2403">RIGHT</a>){</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    <span class="keywordflow">if</span>(node-&gt;right == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                        node-&gt;right = this-&gt;createChild(values, weight);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        created = <span class="keyword">true</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                        node = node-&gt;right;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    created = <span class="keyword">true</span>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#aca4c083d24c0153f1cabd528bc174f7b">  238</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#aca4c083d24c0153f1cabd528bc174f7b">create</a>(std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; datas){</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            root = <span class="keyword">new</span> <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> data : datas){</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                this-&gt;insert(data);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            }</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#af6a08705433ab45144b88b81f57c1e0f">  253</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#af6a08705433ab45144b88b81f57c1e0f">add</a>(T data, <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>){</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            this-&gt;insert(std::make_pair(data, weight));</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a2b0d7318fed4ad4bf92ce22f7e63d324">  263</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#a2b0d7318fed4ad4bf92ce22f7e63d324">equilibrate</a>(<a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0">TREE_SORT</a> sort = <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a>){</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">switch</span>(sort){</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a>:</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    this-&gt;rightBalance();</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0ac09f77dd64a2d5dedf24b5835d9eaa5a">DESC</a>:</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    this-&gt;leftBalance();</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            }</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a3b0dc5b377436abca97e8abc76ab7067">  280</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#a3b0dc5b377436abca97e8abc76ab7067">onDelete</a>(<span class="keywordtype">void</span>(*func)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*)){</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            deleter = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            deleter = func;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#ae88268743eaded28868cc13a0c1ec894">  291</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#ae88268743eaded28868cc13a0c1ec894">onCompare</a>(<span class="keywordtype">void</span>(*func)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*, <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*)){</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            comparator = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            comparator = func;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#ab5a552132fdd3e2b03f03a5c279bad3e">  297</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#ab5a552132fdd3e2b03f03a5c279bad3e">asc</a>(){</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            comparator = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            comparator = &amp;<a class="code" href="../../db/d3a/a00040.php#a05b65486fa381f9881b8ea58c13382ad">treeAscSorter</a>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#a84671d5c8a9131bd94a33734b315e5a3">  303</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../df/d5f/a00064.php#a84671d5c8a9131bd94a33734b315e5a3">desc</a>(){</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            comparator = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            comparator = &amp;<a class="code" href="../../db/d3a/a00040.php#adcf4acfe617e3974a5ba668de737b80c">treeDescSorter</a>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="../../df/d5f/a00064.php#af12b139007643a568e1a3f752ae2e00e">  316</a></span>&#160;        <span class="keyword">static</span> std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; <a class="code" href="../../df/d5f/a00064.php#af12b139007643a568e1a3f752ae2e00e">convert</a>(std::vector&lt;std::pair&lt;T, U&gt;&gt; in){</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; out;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> vals : in){</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                T value = vals.first;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <span class="keyword">static_cast&lt;</span><a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a><span class="keyword">&gt;</span>(vals.second);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                out.push_back(std::make_pair(value, weight));</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">return</span> out;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordtype">void</span> freeTree(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <span class="keywordflow">if</span>(root != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                this-&gt;freeTree(root-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                this-&gt;freeTree(root-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                this-&gt;deleter(root);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="keyword">delete</span> root;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        }</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* finder(T value, <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node, std::string&amp; path){</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> == value){</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> == <span class="keyword">nullptr</span> &amp;&amp; node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* wanted;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="keywordflow">if</span>((wanted = this-&gt;finder(value, node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>, path)) != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                    path += <span class="stringliteral">&quot;0&quot;</span>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                    <span class="keywordflow">return</span> wanted;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                }</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                <span class="keywordflow">if</span>((wanted = this-&gt;finder(value, node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>, path)) != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    path += <span class="stringliteral">&quot;1&quot;</span>;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    <span class="keywordflow">return</span> wanted;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                }</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            }</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* rightBalanceVine(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node, <span class="keywordtype">size_t</span> nodeCount){</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keywordtype">size_t</span> times = <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(log2(static_cast&lt;double&gt;(nodeCount)));</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* newNode = node;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i{0}; i &lt; times; i++){</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                newNode = this-&gt;leftRotate(newNode);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                node = newNode-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> j{0}; j &lt; (nodeCount/2 - 1); j++){</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                    node = this-&gt;leftRotate(node);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                    node = node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                }</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                nodeCount = nodeCount &gt;&gt; 1;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            }</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="keywordflow">return</span> newNode;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* leftBalanceVine(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node, <span class="keywordtype">size_t</span> nodeCount){</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keywordtype">size_t</span> times = <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(log2(static_cast&lt;double&gt;(nodeCount)));</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* newNode = node;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i{0}; i &lt; times; i++){</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                newNode = this-&gt;rightRotate(newNode);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                node = newNode-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> j{0}; j &lt; (nodeCount/2 - 1); j++){</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    node = this-&gt;rightRotate(node);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    node = node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                }</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                nodeCount = nodeCount &gt;&gt; 1;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            }</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">return</span> newNode;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* createRightVine(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            <span class="keywordflow">while</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                node = this-&gt;rightRotate(node);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            }</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> = this-&gt;createRightVine(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            }</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        }</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* createLeftVine(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">while</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                node = this-&gt;leftRotate(node);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            }</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> = this-&gt;createLeftVine(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        }</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordtype">void</span> rightBalance(){</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            <span class="keyword">auto</span> node = this-&gt;createRightVine(root);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            root = this-&gt;rightBalanceVine(node, this-&gt;getRightCount(node));</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        }</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordtype">void</span> leftBalance(){</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keyword">auto</span> node = this-&gt;createLeftVine(root);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            root = this-&gt;leftBalanceVine(node, this-&gt;getLeftCount(node));</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        }</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* leftRotate(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                <span class="keyword">auto</span> <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> = node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> = <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>-&gt;right;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>-&gt;right = <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>-&gt;left;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>-&gt;left = node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> = <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                this-&gt;copier(node, <a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            }</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        }</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* rightRotate(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                <span class="keyword">auto</span> <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> = node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a> = <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>-&gt;left;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>-&gt;left = <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>-&gt;right;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>-&gt;right = node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a> = <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                this-&gt;copier(node, <a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            }</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        }</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordtype">void</span> GRD(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node, <span class="keywordtype">void</span>(*func)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*, <span class="keywordtype">long</span> <span class="keywordtype">int</span>), <span class="keywordtype">long</span> <span class="keywordtype">int</span> index = -1){</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            <span class="keywordflow">if</span>(node != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <span class="keywordflow">if</span>(index &gt;= 0){</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                    GRD(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>, func, index+1);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                    GRD(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>, func, index);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                }</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                func(node, index);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                <span class="keywordflow">if</span>(index &gt;= 0){</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                    GRD(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>, func, index+1);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    GRD(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>, func, index);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                }</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            }</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        }</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* createChild(T <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>, <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>){</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* child = <span class="keyword">new</span> <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            child-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> = <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            child-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            child-&gt;<a class="code" href="../../db/d3a/a00040.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            <span class="keywordflow">return</span> child;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        }</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordtype">size_t</span> height(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keywordflow">if</span>(node == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            }</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="keywordtype">int</span> heightL = this-&gt;height(node-&gt;<a class="code" href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <span class="keywordtype">int</span> heightR = this-&gt;height(node-&gt;<a class="code" href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <span class="keywordflow">return</span> (heightL &gt; heightR)?heightL+1:heightR+1;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        }</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keywordtype">void</span> envoid(){</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            deleter = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            comparator = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            copier = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> printNode(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* node, <span class="keywordtype">long</span> <span class="keywordtype">int</span> index = -1){</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">long</span> <span class="keywordtype">int</span> i{0}; i &lt; index; ++i){</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            }</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            std::cout &lt;&lt; node-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> &lt;&lt; <span class="stringliteral">&quot; -&gt; &#39;&quot;</span> &lt;&lt; node-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        }</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> copyData(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* nodeSource, <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* nodeCopy){</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            T values = nodeSource-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            <a class="code" href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> weight = nodeSource-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            nodeSource-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> = nodeCopy-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            nodeSource-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = nodeCopy-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            nodeCopy-&gt;<a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a> = <a class="code" href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            nodeCopy-&gt;<a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <a class="code" href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        }</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> treeDeleter(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*){}</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>* root;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <a class="code" href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">TREE_DIRECTION</a> (*comparator)(std::pair&lt;T, NodeWeight&gt;, std::pair&lt;T, NodeWeight&gt;);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        void (*deleter)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*);</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        void (*copier)(<a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*, <a class="code" href="../../db/d3a/a00040.php#d7/d12/a00126">Node&lt;T&gt;</a>*);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;};</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="preprocessor">#endif //HEADER_CPP_TREE</span></div><div class="ttc" id="a00040_php_afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc"><div class="ttname"><a href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0a6ec9ae46a1e5c631ae04fc9c4c2d63bc">ASC</a></div><div class="ttdef"><b>Definition:</b> Tree.hpp:17</div></div>
<div class="ttc" id="a00040_php_ac65cb214851db32b3bf2b7072e229e06"><div class="ttname"><a href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06">TREE_DIRECTION</a></div><div class="ttdeci">TREE_DIRECTION</div><div class="ttdef"><b>Definition:</b> Tree.hpp:21</div></div>
<div class="ttc" id="a00040_php_ac65cb214851db32b3bf2b7072e229e06ac157bdf0b85a40d2619cbc8bc1ae5fe2"><div class="ttname"><a href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06ac157bdf0b85a40d2619cbc8bc1ae5fe2">NONE</a></div><div class="ttdef"><b>Definition:</b> Tree.hpp:24</div></div>
<div class="ttc" id="a00015_php_a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758"><div class="ttname"><a href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">Direction::LEFT</a></div></div>
<div class="ttc" id="a00015_php_a224b9163917ac32fc95a60d8c1eec3aaa21507b40c80068eda19865706fdc2403"><div class="ttname"><a href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaa21507b40c80068eda19865706fdc2403">Direction::RIGHT</a></div></div>
<div class="ttc" id="a00040_php_a0a1e73288e0ceb794c65bd86a4b7f231"><div class="ttname"><a href="../../db/d3a/a00040.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a></div><div class="ttdeci">long double NodeWeight</div><div class="ttdef"><b>Definition:</b> Tree.hpp:13</div></div>
<div class="ttc" id="a00040_php_adcf4acfe617e3974a5ba668de737b80c"><div class="ttname"><a href="../../db/d3a/a00040.php#adcf4acfe617e3974a5ba668de737b80c">treeDescSorter</a></div><div class="ttdeci">TREE_DIRECTION treeDescSorter(std::pair&lt; T, NodeWeight &gt; datas, std::pair&lt; T, NodeWeight &gt; nodeDatas)</div><div class="ttdoc">Function to sort a tree descendently depending on weights. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:70</div></div>
<div class="ttc" id="a00040_php_a6faa1b5c8a9e19348d0bfef6232c90cb"><div class="ttname"><a href="../../db/d3a/a00040.php#a6faa1b5c8a9e19348d0bfef6232c90cb">Node::initialized</a></div><div class="ttdeci">bool initialized</div><div class="ttdef"><b>Definition:</b> Tree.hpp:35</div></div>
<div class="ttc" id="a00040_php_a05b65486fa381f9881b8ea58c13382ad"><div class="ttname"><a href="../../db/d3a/a00040.php#a05b65486fa381f9881b8ea58c13382ad">treeAscSorter</a></div><div class="ttdeci">TREE_DIRECTION treeAscSorter(std::pair&lt; T, NodeWeight &gt; datas, std::pair&lt; T, NodeWeight &gt; nodeDatas)</div><div class="ttdoc">Function to sort a tree ascendently depending on weights. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:49</div></div>
<div class="ttc" id="a00064_php_a5389c9acc029d22f38e44dbe66d0d556"><div class="ttname"><a href="../../df/d5f/a00064.php#a5389c9acc029d22f38e44dbe66d0d556">Tree::print</a></div><div class="ttdeci">void print()</div><div class="ttdoc">Print the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:164</div></div>
<div class="ttc" id="a00064_php_a3ff0552b5501fcbee3dfafbe289966d2"><div class="ttname"><a href="../../df/d5f/a00064.php#a3ff0552b5501fcbee3dfafbe289966d2">Tree::height</a></div><div class="ttdeci">size_t height()</div><div class="ttdoc">Return the height of the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:183</div></div>
<div class="ttc" id="a00064_php_a3b0dc5b377436abca97e8abc76ab7067"><div class="ttname"><a href="../../df/d5f/a00064.php#a3b0dc5b377436abca97e8abc76ab7067">Tree::onDelete</a></div><div class="ttdeci">void onDelete(void(*func)(Node&lt; T &gt; *))</div><div class="ttdoc">A setter for the deletion function. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:280</div></div>
<div class="ttc" id="a00064_php_a84671d5c8a9131bd94a33734b315e5a3"><div class="ttname"><a href="../../df/d5f/a00064.php#a84671d5c8a9131bd94a33734b315e5a3">Tree::desc</a></div><div class="ttdeci">void desc()</div><div class="ttdoc">Set the sorter descending. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:303</div></div>
<div class="ttc" id="a00064_php"><div class="ttname"><a href="../../df/d5f/a00064.php">Tree</a></div><div class="ttdoc">A class to manage a binary tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:88</div></div>
<div class="ttc" id="a00040_php_aa2cb07a6e63a4dc1f1a05d3e634a8fdd"><div class="ttname"><a href="../../db/d3a/a00040.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">Node::weight</a></div><div class="ttdeci">NodeWeight weight</div><div class="ttdef"><b>Definition:</b> Tree.hpp:33</div></div>
<div class="ttc" id="a00040_php_afaf56d0935db4c37008c7c186bdde7c0ac09f77dd64a2d5dedf24b5835d9eaa5a"><div class="ttname"><a href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0ac09f77dd64a2d5dedf24b5835d9eaa5a">DESC</a></div><div class="ttdef"><b>Definition:</b> Tree.hpp:18</div></div>
<div class="ttc" id="a00064_php_af6a08705433ab45144b88b81f57c1e0f"><div class="ttname"><a href="../../df/d5f/a00064.php#af6a08705433ab45144b88b81f57c1e0f">Tree::add</a></div><div class="ttdeci">void add(T data, NodeWeight weight)</div><div class="ttdoc">Add datas in the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:253</div></div>
<div class="ttc" id="a00064_php_a6f70313aed640245e4ebba746e973ef9"><div class="ttname"><a href="../../df/d5f/a00064.php#a6f70313aed640245e4ebba746e973ef9">Tree::getLeftCount</a></div><div class="ttdeci">size_t getLeftCount(Node&lt; T &gt; *node)</div><div class="ttdoc">Get the depth on left. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:148</div></div>
<div class="ttc" id="a00040_php_a2841886a16c27e72b21885025c00b44b"><div class="ttname"><a href="../../db/d3a/a00040.php#a2841886a16c27e72b21885025c00b44b">Node::left</a></div><div class="ttdeci">Node&lt; T &gt; * left</div><div class="ttdef"><b>Definition:</b> Tree.hpp:37</div></div>
<div class="ttc" id="a00064_php_aa801df9f48ce2feda42ea73f1cc6be1e"><div class="ttname"><a href="../../df/d5f/a00064.php#aa801df9f48ce2feda42ea73f1cc6be1e">Tree::applyForEach</a></div><div class="ttdeci">void applyForEach(void(*func)(Node&lt; T &gt; *, long int))</div><div class="ttdoc">Do something for each node. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:175</div></div>
<div class="ttc" id="a00040_php_afaf56d0935db4c37008c7c186bdde7c0"><div class="ttname"><a href="../../db/d3a/a00040.php#afaf56d0935db4c37008c7c186bdde7c0">TREE_SORT</a></div><div class="ttdeci">TREE_SORT</div><div class="ttdoc">The sorting order of the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:16</div></div>
<div class="ttc" id="a00040_php_a440411e958356c1d3912dce01ae74edc"><div class="ttname"><a href="../../db/d3a/a00040.php#a440411e958356c1d3912dce01ae74edc">Node::values</a></div><div class="ttdeci">T values</div><div class="ttdef"><b>Definition:</b> Tree.hpp:32</div></div>
<div class="ttc" id="a00064_php_ab5a552132fdd3e2b03f03a5c279bad3e"><div class="ttname"><a href="../../df/d5f/a00064.php#ab5a552132fdd3e2b03f03a5c279bad3e">Tree::asc</a></div><div class="ttdeci">void asc()</div><div class="ttdoc">Set the sorter ascending. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:297</div></div>
<div class="ttc" id="a00064_php_af12b139007643a568e1a3f752ae2e00e"><div class="ttname"><a href="../../df/d5f/a00064.php#af12b139007643a568e1a3f752ae2e00e">Tree::convert</a></div><div class="ttdeci">static std::vector&lt; std::pair&lt; T, NodeWeight &gt; &gt; convert(std::vector&lt; std::pair&lt; T, U &gt;&gt; in)</div><div class="ttdoc">Return an array format for the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:316</div></div>
<div class="ttc" id="a00064_php_ae88268743eaded28868cc13a0c1ec894"><div class="ttname"><a href="../../df/d5f/a00064.php#ae88268743eaded28868cc13a0c1ec894">Tree::onCompare</a></div><div class="ttdeci">void onCompare(void(*func)(Node&lt; T &gt; *, Node&lt; T &gt; *))</div><div class="ttdoc">A setter for the comparator function. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:291</div></div>
<div class="ttc" id="a00040_php_d7/d12/a00126"><div class="ttname"><a href="../../db/d3a/a00040.php#d7/d12/a00126">Node</a></div><div class="ttdoc">A struct to define a node for the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:31</div></div>
<div class="ttc" id="a00064_php_a38efd4e0201ba5596f5159f308851772"><div class="ttname"><a href="../../df/d5f/a00064.php#a38efd4e0201ba5596f5159f308851772">Tree::Tree</a></div><div class="ttdeci">Tree(TREE_SORT sorting=ASC)</div><div class="ttdef"><b>Definition:</b> Tree.hpp:90</div></div>
<div class="ttc" id="a00064_php_ad6a4bc5d0dc000f77acfbeafaddc1672"><div class="ttname"><a href="../../df/d5f/a00064.php#ad6a4bc5d0dc000f77acfbeafaddc1672">Tree::insert</a></div><div class="ttdeci">void insert(std::pair&lt; T, NodeWeight &gt; datas)</div><div class="ttdoc">Insert datas in the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:193</div></div>
<div class="ttc" id="a00064_php_a2b0d7318fed4ad4bf92ce22f7e63d324"><div class="ttname"><a href="../../df/d5f/a00064.php#a2b0d7318fed4ad4bf92ce22f7e63d324">Tree::equilibrate</a></div><div class="ttdeci">void equilibrate(TREE_SORT sort=ASC)</div><div class="ttdoc">Equilibrate the tree. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:263</div></div>
<div class="ttc" id="a00040_php_ac65cb214851db32b3bf2b7072e229e06adb45120aafd37a973140edee24708065"><div class="ttname"><a href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06adb45120aafd37a973140edee24708065">LEFT</a></div><div class="ttdef"><b>Definition:</b> Tree.hpp:23</div></div>
<div class="ttc" id="a00040_php_ad7092450d89448320103cde1f72da320"><div class="ttname"><a href="../../db/d3a/a00040.php#ad7092450d89448320103cde1f72da320">Node::right</a></div><div class="ttdeci">Node&lt; T &gt; * right</div><div class="ttdef"><b>Definition:</b> Tree.hpp:38</div></div>
<div class="ttc" id="a00015_php"><div class="ttname"><a href="../../dd/d1b/a00015.php">defines.hpp</a></div></div>
<div class="ttc" id="a00064_php_aca4c083d24c0153f1cabd528bc174f7b"><div class="ttname"><a href="../../df/d5f/a00064.php#aca4c083d24c0153f1cabd528bc174f7b">Tree::create</a></div><div class="ttdeci">void create(std::vector&lt; std::pair&lt; T, NodeWeight &gt;&gt; datas)</div><div class="ttdoc">Create a binary tree with a custom sort function. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:238</div></div>
<div class="ttc" id="a00015_php_a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="../../dd/d1b/a00015.php#a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693">Direction::NONE</a></div></div>
<div class="ttc" id="a00064_php_a193fd2684c987f8e85ea9c1ed12badf7"><div class="ttname"><a href="../../df/d5f/a00064.php#a193fd2684c987f8e85ea9c1ed12badf7">Tree::find</a></div><div class="ttdeci">std::pair&lt; Node&lt; T &gt; *, std::string &gt; find(T value)</div><div class="ttdoc">Find a value in the tree and return the node and the path to the node. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:109</div></div>
<div class="ttc" id="a00064_php_a04affc46d89a0ef5d517ab685c9c346e"><div class="ttname"><a href="../../df/d5f/a00064.php#a04affc46d89a0ef5d517ab685c9c346e">Tree::~Tree</a></div><div class="ttdeci">~Tree()</div><div class="ttdef"><b>Definition:</b> Tree.hpp:99</div></div>
<div class="ttc" id="a00040_php_ac65cb214851db32b3bf2b7072e229e06aec8379af7490bb9eaaf579cf17876f38"><div class="ttname"><a href="../../db/d3a/a00040.php#ac65cb214851db32b3bf2b7072e229e06aec8379af7490bb9eaaf579cf17876f38">RIGHT</a></div><div class="ttdef"><b>Definition:</b> Tree.hpp:22</div></div>
<div class="ttc" id="a00064_php_af0c07b62a0dfbac020a70d29e3572644"><div class="ttname"><a href="../../df/d5f/a00064.php#af0c07b62a0dfbac020a70d29e3572644">Tree::getRightCount</a></div><div class="ttdeci">size_t getRightCount(Node&lt; T &gt; *node)</div><div class="ttdoc">Get the depth on right. </div><div class="ttdef"><b>Definition:</b> Tree.hpp:127</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.11-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
	<ul>
		<li class="navelem"><a class="el" href="../../dir_badfd550b617ce52cc73ed1c8c9513f6.php">Algo</a></li><li class="navelem"><a class="el" href="../../dir_1788504ec76a4dda5464562bc560d0b5.php">C++Tests</a></li><li class="navelem"><a class="el" href="../../dir_2e741febc7df97747a68d36c1b3be5f0.php">C++</a></li><li class="navelem"><a class="el" href="../../dir_220287e732b97f08f66e5f221c69df74.php">inc</a></li><li class="navelem"><a class="el" href="../../dir_75b0389167f46f79a101ef8c4434cec4.php">C++</a></li><li class="navelem"><a class="el" href="../../db/d3a/a00040.php">Tree.hpp</a></li>
		<li class="footer">
			<?php
				echo $text;
			?>
		</li>
	</ul>
</div>
</body>
</html>
