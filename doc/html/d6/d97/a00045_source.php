<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>C++: types.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">C++
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">My own C++ features</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.php"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d6/d97/a00045_source.php','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">types.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/d97/a00045.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef HEADER_CPP_TYPES</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define HEADER_CPP_TYPES</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;numeric&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;regex&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a4fb848db698dbbc0b50fb9e6836de46a">   28</a></span>&#160;<span class="keyword">using</span> <a class="code" href="../../d6/d97/a00045.php#a4fb848db698dbbc0b50fb9e6836de46a">double32_t</a> = double;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a2bf7d302208fe9b09381557fd448e273">   29</a></span>&#160;<span class="keyword">using</span> <a class="code" href="../../d6/d97/a00045.php#a2bf7d302208fe9b09381557fd448e273">double64_t</a> = <span class="keywordtype">long</span> double;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U = T, <span class="keyword">typename</span> V = U&gt;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php">   33</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio</a>{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">   35</a></span>&#160;        T <a class="code" href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">first</a>;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">   36</a></span>&#160;        U <a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a>;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">   37</a></span>&#160;        V <a class="code" href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">ter</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a8c3e1e97161b4bb75526a9ae5c6fece1">   41</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;(const trio&lt;T, U, V&gt;&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">if</span>(a.first &lt; b.first){ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">if</span>(a.second &lt; b.second){ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> a.<a class="code" href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">ter</a> &lt; b.ter;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#ad85246dd91c3685dafa427df745d7cf3">   47</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#ad85246dd91c3685dafa427df745d7cf3">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span>(a.<a class="code" href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">first</a> != b.<a class="code" href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">first</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(a.<a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a> != b.<a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> a.<a class="code" href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">ter</a> == b.<a class="code" href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">ter</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a671074d5e0cf69bd6647f74f33cdc16b">   54</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#a671074d5e0cf69bd6647f74f33cdc16b">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> !(a &lt; b) &amp;&amp; !(a == b);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#afb3f2280ed94a648a640b4d1a2d72687">   58</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#afb3f2280ed94a648a640b4d1a2d72687">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> (a &gt; b) || (a == b);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a8d3641e527de40cc4aa34d588800b2ce">   62</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const trio&lt;T, U, V&gt;&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> (a &lt; b) || (a == b);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#aeae7ce6ba6f05dea9ceb12844ebc7a5d">   66</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#aeae7ce6ba6f05dea9ceb12844ebc7a5d">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;T, U, V&gt;</a>&amp; b){</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> !(a == b);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#ad388374a5c9ccecbb8968cabadd6577a">   70</a></span>&#160;<span class="keyword">using</span> <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio_str</a> = <a class="code" href="../../d6/d97/a00045.php#dd/d42/a00109">trio&lt;std::string&gt;</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U = T, <span class="keyword">typename</span> V = U, <span class="keyword">typename</span> W = V&gt;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php">   74</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor</a>{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a2bf6e0bae9df9d4f84bab8087aa1dd1a">   76</a></span>&#160;        T <a class="code" href="../../d6/d97/a00045.php#a2bf6e0bae9df9d4f84bab8087aa1dd1a">first</a>;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a2e139f090204cfbf8f6bad9e3f260a73">   77</a></span>&#160;        U <a class="code" href="../../d6/d97/a00045.php#a2e139f090204cfbf8f6bad9e3f260a73">second</a>;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a9ea07cc03504e756f1b8f0b00643d806">   78</a></span>&#160;        V <a class="code" href="../../d6/d97/a00045.php#a9ea07cc03504e756f1b8f0b00643d806">ter</a>;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">   79</a></span>&#160;        W <a class="code" href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">quad</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;};</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a49d7a6385740bf19c163dcaa63a37f3e">   83</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;(const quatuor&lt;T, U, V, W&gt;&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">if</span>(a.first &lt; b.first){ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span>(a.second &lt; b.second){ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">if</span>(a.ter &lt; b.ter){ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> a.<a class="code" href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">quad</a> &lt; b.quad;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a6c1714b34921047b134b7033985baff9">   90</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#ad85246dd91c3685dafa427df745d7cf3">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span>(a.<a class="code" href="../../d6/d97/a00045.php#a2bf6e0bae9df9d4f84bab8087aa1dd1a">first</a> != b.<a class="code" href="../../d6/d97/a00045.php#a2bf6e0bae9df9d4f84bab8087aa1dd1a">first</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span>(a.<a class="code" href="../../d6/d97/a00045.php#a2e139f090204cfbf8f6bad9e3f260a73">second</a> != b.<a class="code" href="../../d6/d97/a00045.php#a2e139f090204cfbf8f6bad9e3f260a73">second</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span>(a.<a class="code" href="../../d6/d97/a00045.php#a9ea07cc03504e756f1b8f0b00643d806">ter</a> != b.<a class="code" href="../../d6/d97/a00045.php#a9ea07cc03504e756f1b8f0b00643d806">ter</a>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> a.<a class="code" href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">quad</a> == b.<a class="code" href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">quad</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#af9b09d51936de8ac9821f04d90423e25">   98</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#a671074d5e0cf69bd6647f74f33cdc16b">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> !(a &lt; b) &amp;&amp; !(a == b);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a14707b953675c0370c5fe14e75208256">  102</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#afb3f2280ed94a648a640b4d1a2d72687">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> (a &gt; b) || (a == b);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a0086e3e1bde383f349e72edcd7f3d92f">  106</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const quatuor&lt;T, U, V, W&gt;&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> (a &lt; b) || (a == b);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> V, <span class="keyword">typename</span> W&gt;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#afe6bddc898007446cefa681bdcee2f70">  110</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d97/a00045.php#aeae7ce6ba6f05dea9ceb12844ebc7a5d">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; a, <span class="keyword">const</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;T, U, V, W&gt;</a>&amp; b){</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> !(a == b);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a9a92bcd92a1585bb32fd81d98f7ff0f0">  114</a></span>&#160;<span class="keyword">using</span> <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor_str</a> = <a class="code" href="../../d6/d97/a00045.php#df/d98/a00107">quatuor&lt;std::string&gt;</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> C&gt;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    std::string <a class="code" href="../../d6/d97/a00045.php#a497ec31c29c2eb98e791cb531907f9da">getType</a>(){</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        std::string type = __PRETTY_FUNCTION__;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keyword">auto</span> pos = type.find(<span class="stringliteral">&quot; = &quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span>(pos != std::string::npos){</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            type.erase(0, pos+3);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        pos = type.find(<span class="stringliteral">&quot;;&quot;</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span>(pos != std::string::npos){</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            type.erase(type.begin()+pos, type.end());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        pos = type.find(<span class="stringliteral">&quot;]&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span>(pos != std::string::npos){</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            type.erase(type.begin()+pos, type.end());</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        std::string <a class="code" href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">first</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        std::string <a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        first = <span class="stringliteral">&quot;&gt; &gt;&quot;</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        second = <span class="stringliteral">&quot;&gt;&gt;&quot;</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">do</span> {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            pos = type.find(first);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">if</span>(pos != std::string::npos){</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                type.replace(pos, first.size(), <a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        } <span class="keywordflow">while</span>(pos != std::string::npos);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        first = <span class="stringliteral">&quot;std::__cxx11::basic_string&lt;char&gt;&quot;</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        second = <span class="stringliteral">&quot;std::string&quot;</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">do</span> {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            pos = type.find(first);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span>(pos != std::string::npos){</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                type.replace(pos, first.size(), <a class="code" href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">second</a>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        } <span class="keywordflow">while</span>(pos != std::string::npos);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> type;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#endif //DOXYGEN_SHOULD_SKIP_THIS</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> C&gt;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a497ec31c29c2eb98e791cb531907f9da">  164</a></span>&#160;std::string <a class="code" href="../../d6/d97/a00045.php#a497ec31c29c2eb98e791cb531907f9da">getType</a>(<span class="keyword">const</span> C&amp;){</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> getType&lt;C&gt;();</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> C&gt;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#a19a7086649ffef67d2846ad82f94db00">  175</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d97/a00045.php#a19a7086649ffef67d2846ad82f94db00">printType</a>(<span class="keyword">const</span> C&amp; obj){</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;Object type : &quot;</span> &lt;&lt; <a class="code" href="../../d6/d97/a00045.php#a497ec31c29c2eb98e791cb531907f9da">getType</a>(obj) &lt;&lt; std::endl;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> C&gt;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../d6/d97/a00045.php#ae3710ad55e61cc2cfa9ed28a0a66e73d">  181</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d97/a00045.php#ae3710ad55e61cc2cfa9ed28a0a66e73d">printSize</a>(){</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    std::cout &lt;&lt; getType&lt;C&gt;() &lt;&lt; <span class="stringliteral">&quot; : &quot;</span> &lt;&lt; <span class="keyword">sizeof</span>(C) &lt;&lt; std::endl;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">#endif //HEADER_CPP_TYPES</span></div><div class="ttc" id="a00045_php_a45867a79f808a4b8317a9592d6f9df5b"><div class="ttname"><a href="../../d6/d97/a00045.php#a45867a79f808a4b8317a9592d6f9df5b">quatuor::quad</a></div><div class="ttdeci">W quad</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00079">types.hpp:79</a></div></div>
<div class="ttc" id="a00045_php_af8bab1b2edaafe2be7b53c7479e5417a"><div class="ttname"><a href="../../d6/d97/a00045.php#af8bab1b2edaafe2be7b53c7479e5417a">trio::ter</a></div><div class="ttdeci">V ter</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00037">types.hpp:37</a></div></div>
<div class="ttc" id="a00045_php_a2e139f090204cfbf8f6bad9e3f260a73"><div class="ttname"><a href="../../d6/d97/a00045.php#a2e139f090204cfbf8f6bad9e3f260a73">quatuor::second</a></div><div class="ttdeci">U second</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00077">types.hpp:77</a></div></div>
<div class="ttc" id="a00045_php_a4fb848db698dbbc0b50fb9e6836de46a"><div class="ttname"><a href="../../d6/d97/a00045.php#a4fb848db698dbbc0b50fb9e6836de46a">double32_t</a></div><div class="ttdeci">double double32_t</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00028">types.hpp:28</a></div></div>
<div class="ttc" id="a00045_php_df/d98/a00107"><div class="ttname"><a href="../../d6/d97/a00045.php#df/d98/a00107">quatuor</a></div><div class="ttdoc">A container for four values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00074">types.hpp:74</a></div></div>
<div class="ttc" id="a00045_php_a2bf6e0bae9df9d4f84bab8087aa1dd1a"><div class="ttname"><a href="../../d6/d97/a00045.php#a2bf6e0bae9df9d4f84bab8087aa1dd1a">quatuor::first</a></div><div class="ttdeci">T first</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00076">types.hpp:76</a></div></div>
<div class="ttc" id="a00045_php_a671074d5e0cf69bd6647f74f33cdc16b"><div class="ttname"><a href="../../d6/d97/a00045.php#a671074d5e0cf69bd6647f74f33cdc16b">operator&gt;</a></div><div class="ttdeci">bool operator&gt;(const trio&lt; T, U, V &gt; &amp;a, const trio&lt; T, U, V &gt; &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00054">types.hpp:54</a></div></div>
<div class="ttc" id="a00045_php_afd5c9afd87ec0afa9280b0e623350125"><div class="ttname"><a href="../../d6/d97/a00045.php#afd5c9afd87ec0afa9280b0e623350125">trio::first</a></div><div class="ttdeci">T first</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00035">types.hpp:35</a></div></div>
<div class="ttc" id="a00045_php_afb3f2280ed94a648a640b4d1a2d72687"><div class="ttname"><a href="../../d6/d97/a00045.php#afb3f2280ed94a648a640b4d1a2d72687">operator&gt;=</a></div><div class="ttdeci">bool operator&gt;=(const trio&lt; T, U, V &gt; &amp;a, const trio&lt; T, U, V &gt; &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00058">types.hpp:58</a></div></div>
<div class="ttc" id="a00045_php_a497ec31c29c2eb98e791cb531907f9da"><div class="ttname"><a href="../../d6/d97/a00045.php#a497ec31c29c2eb98e791cb531907f9da">getType</a></div><div class="ttdeci">std::string getType(const C &amp;)</div><div class="ttdoc">Get the type of obj in a string. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00164">types.hpp:164</a></div></div>
<div class="ttc" id="a00045_php_aeae7ce6ba6f05dea9ceb12844ebc7a5d"><div class="ttname"><a href="../../d6/d97/a00045.php#aeae7ce6ba6f05dea9ceb12844ebc7a5d">operator!=</a></div><div class="ttdeci">bool operator!=(const trio&lt; T, U, V &gt; &amp;a, const trio&lt; T, U, V &gt; &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00066">types.hpp:66</a></div></div>
<div class="ttc" id="a00045_php_a9ea07cc03504e756f1b8f0b00643d806"><div class="ttname"><a href="../../d6/d97/a00045.php#a9ea07cc03504e756f1b8f0b00643d806">quatuor::ter</a></div><div class="ttdeci">V ter</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00078">types.hpp:78</a></div></div>
<div class="ttc" id="a00045_php_ad85246dd91c3685dafa427df745d7cf3"><div class="ttname"><a href="../../d6/d97/a00045.php#ad85246dd91c3685dafa427df745d7cf3">operator==</a></div><div class="ttdeci">bool operator==(const trio&lt; T, U, V &gt; &amp;a, const trio&lt; T, U, V &gt; &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00047">types.hpp:47</a></div></div>
<div class="ttc" id="a00045_php_ae3710ad55e61cc2cfa9ed28a0a66e73d"><div class="ttname"><a href="../../d6/d97/a00045.php#ae3710ad55e61cc2cfa9ed28a0a66e73d">printSize</a></div><div class="ttdeci">void printSize()</div><div class="ttdoc">Print the size of obj type. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00181">types.hpp:181</a></div></div>
<div class="ttc" id="a00045_php_a875a876ca0878b4e0e20237f031545e6"><div class="ttname"><a href="../../d6/d97/a00045.php#a875a876ca0878b4e0e20237f031545e6">trio::second</a></div><div class="ttdeci">U second</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00036">types.hpp:36</a></div></div>
<div class="ttc" id="a00045_php_a2bf7d302208fe9b09381557fd448e273"><div class="ttname"><a href="../../d6/d97/a00045.php#a2bf7d302208fe9b09381557fd448e273">double64_t</a></div><div class="ttdeci">long double double64_t</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00029">types.hpp:29</a></div></div>
<div class="ttc" id="a00045_php_dd/d42/a00109"><div class="ttname"><a href="../../d6/d97/a00045.php#dd/d42/a00109">trio</a></div><div class="ttdoc">A container for three values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00033">types.hpp:33</a></div></div>
<div class="ttc" id="a00045_php_a19a7086649ffef67d2846ad82f94db00"><div class="ttname"><a href="../../d6/d97/a00045.php#a19a7086649ffef67d2846ad82f94db00">printType</a></div><div class="ttdeci">void printType(const C &amp;obj)</div><div class="ttdoc">Print the type of obj. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d97/a00045_source.php#l00175">types.hpp:175</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_badfd550b617ce52cc73ed1c8c9513f6.php">Algo</a></li><li class="navelem"><a class="el" href="../../dir_1788504ec76a4dda5464562bc560d0b5.php">C++Tests</a></li><li class="navelem"><a class="el" href="../../dir_2e741febc7df97747a68d36c1b3be5f0.php">C++</a></li><li class="navelem"><a class="el" href="../../dir_220287e732b97f08f66e5f221c69df74.php">inc</a></li><li class="navelem"><a class="el" href="../../dir_75b0389167f46f79a101ef8c4434cec4.php">C++</a></li><li class="navelem"><a class="el" href="../../d6/d97/a00045.php">types.hpp</a></li>
    <li class="footer">Generated on Sun Aug 5 2018 16:15:45 for C++ by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
