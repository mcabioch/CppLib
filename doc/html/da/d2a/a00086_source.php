<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=9"/>
		<meta name="generator" content="Doxygen 1.8.11"/>
		<title>C++: cryptage.hpp Source File</title>
		<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
		<script type="text/javascript" src="../../jquery.js"></script>
		<script type="text/javascript" src="../../dynsections.js"></script>
		<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
		<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
		<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
		<link href="../../doxystyle.css" rel="stylesheet" type="text/css"/>
	</head>
	<body>
		<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
			<div id="titlearea">
				<table cellspacing="0" cellpadding="0">
					<tbody>
						<tr style="height: 56px;">
							<td id="projectalign" style="padding-left: 0.5em;">
								<div id="projectname">C++
									&#160;<span id="projectnumber">2.0</span>
								</div>
								<div id="projectbrief">My own C++ features</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<?php
				$text = "Generated on Wed Aug 8 2018 09:57:28 for C++ by";
				$text = substr($text, 0, sizeof($text) - 4);
				$tmp = substr($text, 17);
				$tmp = substr($tmp, 0, strpos($tmp, " for"));
				$lastModif = date("l jS \of F Y \a\\t H:i:s", strtotime($tmp));
			?>
		<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.php"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('da/d2a/a00086_source.php','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">cryptage.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../da/d2a/a00086.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef HEADER_CPP_CRYPTAGE</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define HEADER_CPP_CRYPTAGE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/d1b/a00015.php">C++/defines.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d7/d7a/a00016.php">   17</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d7a/a00016.php">Crypto</a> {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="comment">/* Constructor */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <a class="code" href="../../d7/d7a/a00016.php#abc5714d83e17c9961258646a94e75079">Crypto</a>();</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="comment">/* Getters */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="comment">/* Setters */</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="comment">/* Others */</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7a/a00016.php#a76d99d39d43cf53d9b18a00bec7a8132">crypt</a>() = 0;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;};</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d4/dee/a00008.php">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/dee/a00008.php">Cesar</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d7a/a00016.php">Crypto</a> {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="comment">/* Constructor */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../d4/dee/a00008.php#a9a70a4a1e758085855fd550404687388">   42</a></span>&#160;        <a class="code" href="../../d4/dee/a00008.php#a9a70a4a1e758085855fd550404687388">Cesar</a>(){}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment">/* Getters */</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="comment">/* Setters */</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment">/* Others */</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        std::string <a class="code" href="../../d7/d7a/a00016.php#a76d99d39d43cf53d9b18a00bec7a8132">crypt</a>(std::string message, <span class="keywordtype">int</span> decal = 0);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::string decrypt(std::string message, <span class="keywordtype">int</span> decal);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        std::string decrypt(std::string message);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d4/dee/a00008.php#a09635aa52fa6a1245a6b2b4fbe024f1e">   78</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/dee/a00008.php#a09635aa52fa6a1245a6b2b4fbe024f1e">crypt</a>(){}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;};</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">    #define SHA2_SHFR(x, n) (x &gt;&gt; n)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">    #define SHA2_ROTR(x, n)   ((x &gt;&gt; n) | (x &lt;&lt; ((sizeof(x) &lt;&lt; 3) - n)))</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">    #define SHA2_CH(x, y, z)  ((x &amp; y) ^ (~x &amp; z))</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">    #define SHA2_MAJ(x, y, z) ((x &amp; y) ^ (x &amp; z) ^ (y &amp; z))</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">    #define SHA256_F1(x) (SHA2_ROTR(x,  2) ^ SHA2_ROTR(x, 13) ^ SHA2_ROTR(x, 22))</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">    #define SHA256_F2(x) (SHA2_ROTR(x,  6) ^ SHA2_ROTR(x, 11) ^ SHA2_ROTR(x, 25))</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">    #define SHA256_F3(x) (SHA2_ROTR(x,  7) ^ SHA2_ROTR(x, 18) ^ SHA2_SHFR(x,  3))</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">    #define SHA256_F4(x) (SHA2_ROTR(x, 17) ^ SHA2_ROTR(x, 19) ^ SHA2_SHFR(x, 10))</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">    #define SHA2_UNPACK32(x, str)                           \</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">    {                                                       \</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">        *((str) + 3) = static_cast&lt;uint8_t&gt;((x));           \</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">        *((str) + 2) = static_cast&lt;uint8_t&gt;((x) &gt;&gt; 8);      \</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">        *((str) + 1) = static_cast&lt;uint8_t&gt;((x) &gt;&gt; 16);     \</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">        *((str) + 0) = static_cast&lt;uint8_t&gt;((x) &gt;&gt; 24);     \</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    #define SHA2_PACK32(str, x)                                 \</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">    {                                                           \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">        *(x) = (static_cast&lt;uint32_t&gt;(*((str) + 3)))            \</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">             | (static_cast&lt;uint32_t&gt;(*((str) + 2)) &lt;&lt; 8)       \</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">             | (static_cast&lt;uint32_t&gt;(*((str) + 1)) &lt;&lt; 16)      \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">             | (static_cast&lt;uint32_t&gt;(*((str) + 0)) &lt;&lt; 24);     \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#endif //DOXYGEN_SHOULD_SKIP_THIS</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php">  116</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/df7/a00058.php">SHA2</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d7a/a00016.php">Crypto</a> {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">/* Constructor */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="../../d7/df7/a00058.php">SHA2</a>();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">/* Getters */</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">/* Setters */</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="comment">/* Others */</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            std::string <a class="code" href="../../d7/d7a/a00016.php#a76d99d39d43cf53d9b18a00bec7a8132">crypt</a>(<span class="keyword">const</span> std::string&amp; message);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#add5d76b18375724a2c8fdfcb4f418b70">  135</a></span>&#160;            <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/df7/a00058.php#add5d76b18375724a2c8fdfcb4f418b70">crypt</a>(){}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordtype">void</span> transform(<span class="keyword">const</span> uint8_t* message, <span class="keywordtype">size_t</span> block_nb);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordtype">void</span> update(<span class="keyword">const</span> std::string&amp; message);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordtype">void</span> <span class="keyword">final</span>(uint8_t* digest);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#ae309afa2dc45b155f40210c87f0477e5">  162</a></span>&#160;        <span class="keyword">const</span> <span class="keyword">static</span> <span class="keywordtype">size_t</span> DIGEST_SIZE = (256/8);</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#a9c076de598acebbfeb6f5d090f2dcfbc">  163</a></span>&#160;        <span class="keyword">const</span> <span class="keyword">static</span> uint32_t sha2_keys[];</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#a8bba1ac36d3d93e2483b6c1d10dd485f">  164</a></span>&#160;        <span class="keyword">const</span> <span class="keyword">static</span> <span class="keywordtype">size_t</span> BLOCK_SIZE = (512/8);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#ab11608905b443ef189cb5547d373dc92">  166</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../d7/df7/a00058.php#ab11608905b443ef189cb5547d373dc92">totalLength</a>;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#a8cfb7667e80e0d4e5379570d0ccc5fe0">  167</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../d7/df7/a00058.php#a8cfb7667e80e0d4e5379570d0ccc5fe0">length</a>;</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#a175893c050ef8e13ceb309d1c43bb259">  168</a></span>&#160;        uint8_t block[2*BLOCK_SIZE];</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.php#a1d5da7f3a1199d7c3daa3f2f9fb89133">  169</a></span>&#160;        uint32_t h[8];</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;};</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="../../d1/d22/a00057.php">  177</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d22/a00057.php">RSA</a> : <span class="keyword">public</span> <a class="code" href="../../d7/d7a/a00016.php">Crypto</a> {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="comment">/* Constructor */</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <a class="code" href="../../d1/d22/a00057.php">RSA</a>();</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="comment">/* Getters */</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        std::string getPublic();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        std::string getPrivate();</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="comment">/* Setters */</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordtype">void</span> setPublic(std::string key=<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordtype">void</span> setPrivate(std::string key=<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="comment">/* Others */</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        std::string <a class="code" href="../../d7/d7a/a00016.php#a76d99d39d43cf53d9b18a00bec7a8132">crypt</a>(std::string message);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        std::string decrypt(std::string message);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="../../d1/d22/a00057.php#ab84588271f2e5417d47251be249951b4">  231</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d22/a00057.php#ab84588271f2e5417d47251be249951b4">crypt</a>(){}</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="../../d1/d22/a00057.php#a7d293f0a39aacf8eb05abc7355d436e2">  233</a></span>&#160;        std::string <a class="code" href="../../d1/d22/a00057.php#a7d293f0a39aacf8eb05abc7355d436e2">publicK</a>;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../d1/d22/a00057.php#a933f86ffad0a7a2d5d5e6099bdb5f1be">  234</a></span>&#160;        std::string <a class="code" href="../../d1/d22/a00057.php#a933f86ffad0a7a2d5d5e6099bdb5f1be">privateK</a>;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;};</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">extern</span> <a class="code" href="../../d4/dee/a00008.php">Cesar</a> <a class="code" href="../../da/d2a/a00086.php#a1e4758b1e3ca1aefc42b33e55b9d8fe4">cesar</a>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keyword">extern</span> <a class="code" href="../../d7/df7/a00058.php">SHA2</a> <a class="code" href="../../da/d2a/a00086.php#aade02fa626bf2dcbb38f74338fbbb40c">sha2</a>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#endif //HEADER_CPP_CRYPTAGE</span></div><div class="ttc" id="a00016_php_abc5714d83e17c9961258646a94e75079"><div class="ttname"><a href="../../d7/d7a/a00016.php#abc5714d83e17c9961258646a94e75079">Crypto::Crypto</a></div><div class="ttdeci">Crypto()</div></div>
<div class="ttc" id="a00008_php_a09635aa52fa6a1245a6b2b4fbe024f1e"><div class="ttname"><a href="../../d4/dee/a00008.php#a09635aa52fa6a1245a6b2b4fbe024f1e">Cesar::crypt</a></div><div class="ttdeci">virtual void crypt()</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:78</div></div>
<div class="ttc" id="a00016_php"><div class="ttname"><a href="../../d7/d7a/a00016.php">Crypto</a></div><div class="ttdoc">A class to be the parent for every crypt class. </div><div class="ttdef"><b>Definition:</b> cryptage.hpp:17</div></div>
<div class="ttc" id="a00086_php_a1e4758b1e3ca1aefc42b33e55b9d8fe4"><div class="ttname"><a href="../../da/d2a/a00086.php#a1e4758b1e3ca1aefc42b33e55b9d8fe4">cesar</a></div><div class="ttdeci">Cesar cesar</div><div class="ttdoc">A global cesar variable to crypt and decrypt messages. </div></div>
<div class="ttc" id="a00058_php_add5d76b18375724a2c8fdfcb4f418b70"><div class="ttname"><a href="../../d7/df7/a00058.php#add5d76b18375724a2c8fdfcb4f418b70">SHA2::crypt</a></div><div class="ttdeci">virtual void crypt()</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:135</div></div>
<div class="ttc" id="a00058_php"><div class="ttname"><a href="../../d7/df7/a00058.php">SHA2</a></div><div class="ttdoc">An implementation of sha256 encryption. </div><div class="ttdef"><b>Definition:</b> cryptage.hpp:116</div></div>
<div class="ttc" id="a00008_php"><div class="ttname"><a href="../../d4/dee/a00008.php">Cesar</a></div><div class="ttdoc">A class to use the cesar algorithm for encryption. </div><div class="ttdef"><b>Definition:</b> cryptage.hpp:39</div></div>
<div class="ttc" id="a00086_php_aade02fa626bf2dcbb38f74338fbbb40c"><div class="ttname"><a href="../../da/d2a/a00086.php#aade02fa626bf2dcbb38f74338fbbb40c">sha2</a></div><div class="ttdeci">SHA2 sha2</div><div class="ttdoc">A global sha2 variable to crypt messages. </div></div>
<div class="ttc" id="a00057_php_a7d293f0a39aacf8eb05abc7355d436e2"><div class="ttname"><a href="../../d1/d22/a00057.php#a7d293f0a39aacf8eb05abc7355d436e2">RSA::publicK</a></div><div class="ttdeci">std::string publicK</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:233</div></div>
<div class="ttc" id="a00058_php_ab11608905b443ef189cb5547d373dc92"><div class="ttname"><a href="../../d7/df7/a00058.php#ab11608905b443ef189cb5547d373dc92">SHA2::totalLength</a></div><div class="ttdeci">size_t totalLength</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:166</div></div>
<div class="ttc" id="a00016_php_a76d99d39d43cf53d9b18a00bec7a8132"><div class="ttname"><a href="../../d7/d7a/a00016.php#a76d99d39d43cf53d9b18a00bec7a8132">Crypto::crypt</a></div><div class="ttdeci">virtual void crypt()=0</div></div>
<div class="ttc" id="a00057_php_ab84588271f2e5417d47251be249951b4"><div class="ttname"><a href="../../d1/d22/a00057.php#ab84588271f2e5417d47251be249951b4">RSA::crypt</a></div><div class="ttdeci">virtual void crypt()</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:231</div></div>
<div class="ttc" id="a00008_php_a9a70a4a1e758085855fd550404687388"><div class="ttname"><a href="../../d4/dee/a00008.php#a9a70a4a1e758085855fd550404687388">Cesar::Cesar</a></div><div class="ttdeci">Cesar()</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:42</div></div>
<div class="ttc" id="a00057_php_a933f86ffad0a7a2d5d5e6099bdb5f1be"><div class="ttname"><a href="../../d1/d22/a00057.php#a933f86ffad0a7a2d5d5e6099bdb5f1be">RSA::privateK</a></div><div class="ttdeci">std::string privateK</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:234</div></div>
<div class="ttc" id="a00015_php"><div class="ttname"><a href="../../dd/d1b/a00015.php">defines.hpp</a></div></div>
<div class="ttc" id="a00058_php_a8cfb7667e80e0d4e5379570d0ccc5fe0"><div class="ttname"><a href="../../d7/df7/a00058.php#a8cfb7667e80e0d4e5379570d0ccc5fe0">SHA2::length</a></div><div class="ttdeci">size_t length</div><div class="ttdef"><b>Definition:</b> cryptage.hpp:167</div></div>
<div class="ttc" id="a00057_php"><div class="ttname"><a href="../../d1/d22/a00057.php">RSA</a></div><div class="ttdoc">A class to use the RSA algorithm for encryption. </div><div class="ttdef"><b>Definition:</b> cryptage.hpp:177</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.11-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
	<ul>
		<li class="navelem"><a class="el" href="../../dir_badfd550b617ce52cc73ed1c8c9513f6.php">Algo</a></li><li class="navelem"><a class="el" href="../../dir_1788504ec76a4dda5464562bc560d0b5.php">C++Tests</a></li><li class="navelem"><a class="el" href="../../dir_2e741febc7df97747a68d36c1b3be5f0.php">C++</a></li><li class="navelem"><a class="el" href="../../dir_220287e732b97f08f66e5f221c69df74.php">inc</a></li><li class="navelem"><a class="el" href="../../dir_75b0389167f46f79a101ef8c4434cec4.php">C++</a></li><li class="navelem"><a class="el" href="../../da/d2a/a00086.php">cryptage.hpp</a></li>
		<li class="footer">
			<?php
				echo $text;
			?>
		</li>
	</ul>
</div>
</body>
</html>
