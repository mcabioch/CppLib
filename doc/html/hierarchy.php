<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=9"/>
		<meta name="generator" content="Doxygen 1.8.20"/>
		<title>C++: Class Hierarchy</title>
		<link href="tabs.css" rel="stylesheet" type="text/css"/>
		<script type="text/javascript" src="jquery.js"></script>
		<script type="text/javascript" src="dynsections.js"></script>
		<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
		<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
		<link href="doxygen.css" rel="stylesheet" type="text/css" />
		<link href="doxystyle.css" rel="stylesheet" type="text/css"/>
	</head>
	<body>
		<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
			<div id="titlearea">
				<table cellspacing="0" cellpadding="0">
					<tbody>
						<tr style="height: 56px;">
							<td id="projectalign" style="padding-left: 0.5em;">
								<div id="projectname">C++
									&#160;<span id="projectnumber">1.6.3.0</span>
								</div>
								<div id="projectbrief">My own C++ features</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<?php
				$text = "Generated on Wed Nov 18 2020 14:47:42 for C++ by";
				$text = substr($text, 0, sizeof($text) - 4);
				$tmp = substr($text, 17);
				$tmp = substr($tmp, 0, strpos($tmp, " for"));
				$lastModif = date("l jS \of F Y \a\\t H:i:s", strtotime($tmp));
			?>
		<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('hierarchy.php',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Hierarchy</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.php">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/dbc/a01099.php" target="_self">mcd::Arguments</a></td><td class="desc">A class to manage the arguments </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/de5/a01123.php" target="_self">mcd::Assert</a></td><td class="desc">My assert's implementation </td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#d0/d02/a01119" target="_self">mcd::AssertionLocationStruct</a></td><td class="desc"></td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d84/a01131.php" target="_self">mcd::Big</a></td><td class="desc">A new huge arithmetic variable </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#de/de4/a01135" target="_self">mcd::Binary&lt; T, Enable &gt;</a></td><td class="desc">A class to manage binary values easily </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d3e/a01139.php" target="_self">mcd::Binary&lt; T, typename std::enable_if_t&lt; std::is_arithmetic&lt; T &gt;::value, void &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/db2/a01143.php" target="_self">mcd::genetic::Cell</a></td><td class="desc">A cell with chromosomes </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d34/a01211.php" target="_self">mcd::genetic::Chromosome</a></td><td class="desc">A double group of genes </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d3f/a01215.php" target="_self">mcd::Clock</a></td><td class="desc">A clock to measure the elapsed time </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_9_" class="arrow" onclick="toggleFolder('9_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d39/a01219.php" target="_self">mcd::console::Color</a></td><td class="desc">Change the text color in the console </td></tr>
<tr id="row_9_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/da8/a01227.php" target="_self">mcd::console::Cls</a></td><td class="desc">Clear the console </td></tr>
<tr id="row_9_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/ddd/a01223.php" target="_self">mcd::console::Reinit</a></td><td class="desc"><a class="el" href="d7/ddd/a01223.php" title="Reinit the color in the console.">Reinit</a> the color in the console </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d95/a01247.php" target="_self">mcd::ConsoleTable</a></td><td class="desc">A class to print a table in the console </td></tr>
<tr id="row_11_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_11_" class="arrow" onclick="toggleFolder('11_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dc2/a01251.php" target="_self">mcd::entities::Contraption</a></td><td class="desc">A contraption </td></tr>
<tr id="row_11_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_11_0_" class="arrow" onclick="toggleFolder('11_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/da4/a01287.php" target="_self">mcd::entities::Entity</a></td><td class="desc">An entity </td></tr>
<tr id="row_11_0_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_11_0_0_" class="arrow" onclick="toggleFolder('11_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d0d/a01091.php" target="_self">mcd::entities::Animal</a></td><td class="desc">An animal </td></tr>
<tr id="row_11_0_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d6d/a01095.php" target="_self">mcd::entities::Ant</a></td><td class="desc">An ant </td></tr>
<tr id="row_11_0_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_11_0_1_" class="arrow" onclick="toggleFolder('11_0_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d42/a01463.php" target="_self">mcd::entities::Vegetal</a></td><td class="desc">A vegetal </td></tr>
<tr id="row_11_0_1_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d96/a01347.php" target="_self">mcd::entities::Mushroom</a></td><td class="desc">A mushroom </td></tr>
<tr id="row_11_0_1_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d40/a01387.php" target="_self">mcd::entities::Plant</a></td><td class="desc">A plant </td></tr>
<tr id="row_11_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_11_1_" class="arrow" onclick="toggleFolder('11_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d4b/a01359.php" target="_self">mcd::entities::Object</a></td><td class="desc">An object </td></tr>
<tr id="row_11_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d7d/a01419.php" target="_self">mcd::entities::Stone</a></td><td class="desc">A stone </td></tr>
<tr id="row_12_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#d5/da7/a01283" target="_self">mcd::ContraptionAttr</a></td><td class="desc">A struct to define <b>Contraption</b> attributes </td></tr>
<tr id="row_13_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_13_" class="arrow" onclick="toggleFolder('13_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d42/a01275.php" target="_self">mcd::Date</a></td><td class="desc">A class to play with dates </td></tr>
<tr id="row_13_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/de7/a01279.php" target="_self">mcd::DateTime</a></td><td class="desc">A class to play with dates and times </td></tr>
<tr id="row_14_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_14_" class="arrow" onclick="toggleFolder('14_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::exception</b></td><td class="desc">STL class </td></tr>
<tr id="row_14_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_14_0_" class="arrow" onclick="toggleFolder('14_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/da0/a01291.php" target="_self">mcd::exception</a></td><td class="desc">A class to call custom exceptions </td></tr>
<tr id="row_14_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d5b/a01127.php" target="_self">mcd::AssertionException</a></td><td class="desc">An exception thrown by my assert's implementation </td></tr>
<tr id="row_14_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d72/a01319.php" target="_self">mcd::JsonException</a></td><td class="desc">A class to throw <a class="el" href="d2/d8e/a01315.php" title="A class to manage Json formatted data.">Json</a> exceptions </td></tr>
<tr id="row_14_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/da4/a01343.php" target="_self">mcd::MatrixException</a></td><td class="desc">A class to throw some exceptions for a <a class="el" href="dd/d6e/a01339.php" title="A class to represent matrix.">Matrix</a> instance </td></tr>
<tr id="row_14_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d9b/a01379.php" target="_self">mcd::PathfindingException</a></td><td class="desc">All exceptions that could be thrown by the pathfinding algorithm </td></tr>
<tr id="row_15_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d68/a01295.php" target="_self">mcd::Fraction</a></td><td class="desc">A class to manage fractions </td></tr>
<tr id="row_16_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d38/a01299.php" target="_self">mcd::genetic::Gene</a></td><td class="desc">A gene that represent a caracteristic </td></tr>
<tr id="row_17_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d0d/a01191.php" target="_self">mcd::check::has_istream_operator&lt; T &gt;</a></td><td class="desc">A template class to test if T has an istream operator </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d2d/a01183.php" target="_self">mcd::check::has_ostream_operator&lt; T &gt;</a></td><td class="desc">A template class to test if T has an ostream operator </td></tr>
<tr id="row_19_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d1a/a01179.php" target="_self">mcd::check::has_size_method&lt; T &gt;</a></td><td class="desc">Verify if an object has a size method </td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_20_" class="arrow" onclick="toggleFolder('20_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d07/a01303.php" target="_self">mcd::entities::Hostile</a></td><td class="desc">A class to derivate from when the thing can attack </td></tr>
<tr id="row_20_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d0d/a01091.php" target="_self">mcd::entities::Animal</a></td><td class="desc">An animal </td></tr>
<tr id="row_21_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_21_" class="arrow" onclick="toggleFolder('21_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d4c/a01307.php" target="_self">mcd::Identifier</a></td><td class="desc">A class to store some identify datas </td></tr>
<tr id="row_21_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dbc/a01391.php" target="_self">mcd::entities::Player&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d69/a01311.php" target="_self">mcd::IOConfig</a></td><td class="desc">A class to configure inputs and outputs </td></tr>
<tr id="row_23_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_23_" class="arrow" onclick="toggleFolder('23_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::ios_base</b></td><td class="desc">STL class </td></tr>
<tr id="row_23_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_23_0_" class="arrow" onclick="toggleFolder('23_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::basic_ios&lt; Char &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_23_0_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_23_0_0_" class="arrow" onclick="toggleFolder('23_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::basic_ostream&lt; Char &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_23_0_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_23_0_0_0_" class="arrow" onclick="toggleFolder('23_0_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>std::ostream</b></td><td class="desc">STL class </td></tr>
<tr id="row_23_0_0_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/dbf/a01239.php" target="_self">mcd::console::ThreadCout</a></td><td class="desc">A class to use std::cout thread safe </td></tr>
<tr id="row_24_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/df1/a01151.php" target="_self">mcd::check::is_array&lt; T &gt;</a></td><td class="desc">A template class to test if T is an array, a vector or a map </td></tr>
<tr id="row_25_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/df2/a01175.php" target="_self">mcd::check::is_duration&lt; T &gt;</a></td><td class="desc">A template class to test if T is a chrono::duration </td></tr>
<tr id="row_26_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d64/a01399.php" target="_self">mcd::check::is_minded_ptr&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::shared_ptr, a std::unique_ptr or a std::weak_ptr </td></tr>
<tr id="row_27_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d1f/a01203.php" target="_self">mcd::check::is_object&lt; T &gt;</a></td><td class="desc">A template class to test if T is an unknown object </td></tr>
<tr id="row_28_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d07/a01155.php" target="_self">mcd::check::is_pair&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_29_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d5a/a01199.php" target="_self">mcd::check::is_printable&lt; T &gt;</a></td><td class="desc">A template class to test if T is printable </td></tr>
<tr id="row_30_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d27/a01163.php" target="_self">mcd::check::is_quatuor&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_31_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d22/a01171.php" target="_self">mcd::check::is_smatch&lt; T &gt;</a></td><td class="desc">A template class to test if T is a string regex match </td></tr>
<tr id="row_32_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/dad/a01207.php" target="_self">mcd::check::is_special_struct&lt; T &gt;</a></td><td class="desc">A template class to test if T is a special struct </td></tr>
<tr id="row_33_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/dd6/a01167.php" target="_self">mcd::check::is_string&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::string </td></tr>
<tr id="row_34_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d06/a01403.php" target="_self">mcd::check::is_thread_ptr&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::shared_ptr&lt;thread&gt;, a std::unique_ptr&lt;thread&gt;, a std::weak_ptr&lt;thread&gt; or a thread* </td></tr>
<tr id="row_35_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/de8/a01159.php" target="_self">mcd::check::is_trio&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_36_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/ddb/a01147.php" target="_self">mcd::check::is_vector&lt; T &gt;</a></td><td class="desc">A template class to test if T is a vector </td></tr>
<tr id="row_37_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d8e/a01315.php" target="_self">mcd::Json</a></td><td class="desc">A class to manage <a class="el" href="d2/d8e/a01315.php" title="A class to manage Json formatted data.">Json</a> formatted data </td></tr>
<tr id="row_38_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/da8/a01323.php" target="_self">mcd::Logger</a></td><td class="desc">A class to log some messages </td></tr>
<tr id="row_39_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d04/a01335.php" target="_self">mcd::Map</a></td><td class="desc">A class to manage a map and that implement some pathfinding algorithms </td></tr>
<tr id="row_40_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#dc/d8e/a01331" target="_self">mcd::MapMove</a></td><td class="desc">A struct to know informations about th movement of something in the map </td></tr>
<tr id="row_41_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d6e/a01339.php" target="_self">mcd::Matrix&lt; C &gt;</a></td><td class="desc">A class to represent matrix </td></tr>
<tr id="row_42_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#d7/dfd/a01439" target="_self">mcd::Node&lt; T &gt;</a></td><td class="desc">A struct to define a node for the tree </td></tr>
<tr id="row_43_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_43_" class="arrow" onclick="toggleFolder('43_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/dcd/a01351.php" target="_self">mcd::NotCopyable</a></td><td class="desc">A class to let some other not to be copyable </td></tr>
<tr id="row_43_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_0_" class="arrow" onclick="toggleFolder('43_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d88/a01255.php" target="_self">mcd::Crypto</a></td><td class="desc">A class to be the parent for every crypt class </td></tr>
<tr id="row_43_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d42/a01259.php" target="_self">mcd::Cesar</a></td><td class="desc">A class to use the cesar algorithm for encryption </td></tr>
<tr id="row_43_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d41/a01267.php" target="_self">mcd::MyCrypt</a></td><td class="desc">A class to test a homemade algorithm for encryption </td></tr>
<tr id="row_43_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d39/a01271.php" target="_self">mcd::RSA</a></td><td class="desc">A class to use the <a class="el" href="dd/d39/a01271.php" title="A class to use the RSA algorithm for encryption.">RSA</a> algorithm for encryption </td></tr>
<tr id="row_43_0_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/dcb/a01263.php" target="_self">mcd::SHA2</a></td><td class="desc">An implementation of sha256 encryption </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d4e/a01355.php" target="_self">mcd::NotInstantiable</a></td><td class="desc">Let a class being only an abstract class </td></tr>
<tr id="row_45_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d86/a01367.php" target="_self">mcd::Path</a></td><td class="desc">A class to manage a path computed by the map </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_46_" class="arrow" onclick="toggleFolder('46_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d4d/a01371.php" target="_self">mcd::Pathfinding</a></td><td class="desc">A class to implement some pathfinding algorithms </td></tr>
<tr id="row_46_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/df5/a01375.php" target="_self">mcd::PathfindingDijkstra</a></td><td class="desc">An implementation of the Dijkstra algorithm </td></tr>
<tr id="row_47_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d8b/a01363.php" target="_self">mcd::PathfindingNode</a></td><td class="desc">A node for the path </td></tr>
<tr id="row_48_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/dfe/a01383.php" target="_self">mcd::PathfindingProblem</a></td><td class="desc">A class to group every pathfinding problems in one way to use it </td></tr>
<tr id="row_49_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_49_" class="arrow" onclick="toggleFolder('49_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>PlayerParent</b></td><td class="desc"></td></tr>
<tr id="row_49_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_0_" class="arrow" onclick="toggleFolder('49_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/df5/a01395.php" target="_self">mcd::entities::PlayerAbstraction&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_49_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dbc/a01391.php" target="_self">mcd::entities::Player&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/dc5/a01455.php" target="_self">mcd::Point</a></td><td class="desc">A struct to define a point in space </td></tr>
<tr id="row_51_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_51_" class="arrow" onclick="toggleFolder('51_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d31/a01407.php" target="_self">mcd::PureVirtual</a></td><td class="desc">A class to make some other to be abstract class </td></tr>
<tr id="row_51_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d88/a01231.php" target="_self">mcd::console::Cursor</a></td><td class="desc">A class to play with the cursor in the console </td></tr>
<tr id="row_52_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#d3/dbc/a01451" target="_self">mcd::quatuor&lt; T, U, V, W &gt;</a></td><td class="desc">A container for four values </td></tr>
<tr id="row_53_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_53_" class="arrow" onclick="toggleFolder('53_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::queue&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_53_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/de1/a01111.php" target="_self">mcd::queue&lt; T, Container &gt;</a></td><td class="desc">An implementation of std::queue </td></tr>
<tr id="row_53_1_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_53_1_" class="arrow" onclick="toggleFolder('53_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/de1/a01111.php" target="_self">mcd::queue&lt; T, std::deque&lt; T &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_53_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/dd5/a01115.php" target="_self">mcd::t_queue&lt; T, Container &gt;</a></td><td class="desc">An thread-safe implementation of queue </td></tr>
<tr id="row_54_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d99/a01411.php" target="_self">mcd::Referenced&lt; C &gt;</a></td><td class="desc">A class to have a reference to the class' pointer </td></tr>
<tr id="row_55_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d70/a01415.php" target="_self">mcd::RND&lt; T, U &gt;</a></td><td class="desc">A class to simplify the use of random </td></tr>
<tr id="row_56_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/db0/a01243.php" target="_self">mcd::console::SetPrecision</a></td><td class="desc">Change the precision of a std::ostream and save the default value </td></tr>
<tr id="row_57_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_57_" class="arrow" onclick="toggleFolder('57_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::stack&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_57_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d10/a01103.php" target="_self">mcd::stack&lt; T, Container &gt;</a></td><td class="desc">An implementation of std::stack </td></tr>
<tr id="row_57_1_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_57_1_" class="arrow" onclick="toggleFolder('57_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d10/a01103.php" target="_self">mcd::stack&lt; T, std::deque&lt; T &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_57_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d4a/a01107.php" target="_self">mcd::t_stack&lt; T, Container &gt;</a></td><td class="desc">An thread-safe implementation of stack </td></tr>
<tr id="row_58_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/ddc/a01423.php" target="_self">mcd::tests::Test</a></td><td class="desc">A static class to test code </td></tr>
<tr id="row_59_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d78/a01427.php" target="_self">mcd::Threadable&lt; C &gt;</a></td><td class="desc">A class to let another one to be threadable with update() member in a thread </td></tr>
<tr id="row_60_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_60_" class="arrow" onclick="toggleFolder('60_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d78/a01427.php" target="_self">mcd::Threadable&lt; Timer &gt;</a></td><td class="desc"></td></tr>
<tr id="row_60_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d95/a01435.php" target="_self">mcd::Timer</a></td><td class="desc">A timer to do something at the end </td></tr>
<tr id="row_61_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/dad/a01235.php" target="_self">mcd::console::ThreadEndlCout</a></td><td class="desc">A class to use std::endl in <a class="el" href="d7/dbf/a01239.php" title="A class to use std::cout thread safe.">ThreadCout</a> </td></tr>
<tr id="row_62_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_62_" class="arrow" onclick="toggleFolder('62_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d8b/a01431.php" target="_self">mcd::Time</a></td><td class="desc">A class to play with dates </td></tr>
<tr id="row_62_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/de7/a01279.php" target="_self">mcd::DateTime</a></td><td class="desc">A class to play with dates and times </td></tr>
<tr id="row_63_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d65/a01443.php" target="_self">mcd::Tree&lt; T &gt;</a></td><td class="desc">A class to manage a binary tree </td></tr>
<tr id="row_64_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#df/d75/a01447" target="_self">mcd::trio&lt; T, U, V &gt;</a></td><td class="desc">A container for three values </td></tr>
<tr id="row_65_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_65_" class="arrow" onclick="toggleFolder('65_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::vector&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_65_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d3b/a01459.php" target="_self">mcd::vector&lt; C &gt;</a></td><td class="desc">Add some features to std::vector </td></tr>
<tr id="row_66_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d12/a00268.php#d4/d2c/a01327" target="_self">mcd::WorldDimensions</a></td><td class="desc">An object to group the dimensions of the world </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.11-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
	<ul>
		<li class="footer">
			<?php
				echo $text;
			?>
		</li>
	</ul>
</div>
</body>
</html>
