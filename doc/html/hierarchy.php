<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=9"/>
		<meta name="generator" content="Doxygen 1.8.13"/>
		<title>C++: Class Hierarchy</title>
		<link href="tabs.css" rel="stylesheet" type="text/css"/>
		<script type="text/javascript" src="jquery.js"></script>
		<script type="text/javascript" src="dynsections.js"></script>
		<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
		<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
		<link href="doxygen.css" rel="stylesheet" type="text/css" />
		<link href="doxystyle.css" rel="stylesheet" type="text/css"/>
	</head>
	<body>
		<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
			<div id="titlearea">
				<table cellspacing="0" cellpadding="0">
					<tbody>
						<tr style="height: 56px;">
							<td id="projectalign" style="padding-left: 0.5em;">
								<div id="projectname">C++
									&#160;<span id="projectnumber">2.0</span>
								</div>
								<div id="projectbrief">My own C++ features</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<?php
				$text = "Generated on Sat Nov 30 2019 18:26:03 for C++ by";
				$text = substr($text, 0, sizeof($text) - 4);
				$tmp = substr($text, 17);
				$tmp = substr($tmp, 0, strpos($tmp, " for"));
				$lastModif = date("l jS \of F Y \a\\t H:i:s", strtotime($tmp));
			?>
		<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('hierarchy.php','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Hierarchy</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.php">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/dcd/a00802.php" target="_self">mcd::Arguments</a></td><td class="desc">A class to manage the arguments </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d90/a00826.php" target="_self">mcd::Assert</a></td><td class="desc">My assert's implementation </td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#d6/da7/a00822" target="_self">mcd::AssertionLocationStruct</a></td><td class="desc"></td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d02/a00834.php" target="_self">mcd::Big</a></td><td class="desc">A new huge arithmetic variable </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#d2/dc7/a00838" target="_self">mcd::Binary&lt; T, Enable &gt;</a></td><td class="desc">A class to manage binary values easily </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d11/a00842.php" target="_self">mcd::Binary&lt; T, typename std::enable_if_t&lt; std::is_arithmetic&lt; T &gt;::value, void &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d12/a00910.php" target="_self">mcd::Clock</a></td><td class="desc">A clock to measure the elapsed time </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_7_" class="arrow" onclick="toggleFolder('7_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/dd1/a00914.php" target="_self">mcd::Color</a></td><td class="desc">Change the text color in the console </td></tr>
<tr id="row_7_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/dcf/a00922.php" target="_self">mcd::Cls</a></td><td class="desc">Clear the console </td></tr>
<tr id="row_7_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/ddf/a00918.php" target="_self">mcd::Reinit</a></td><td class="desc"><a class="el" href="d0/ddf/a00918.php" title="Reinit the color in the console. ">Reinit</a> the color in the console </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d54/a00938.php" target="_self">mcd::ConsoleTable</a></td><td class="desc">A class to print a table in the console </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_9_" class="arrow" onclick="toggleFolder('9_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d12/a00942.php" target="_self">mcd::Contraption</a></td><td class="desc">A contraption </td></tr>
<tr id="row_9_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_9_0_" class="arrow" onclick="toggleFolder('9_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/ddd/a00978.php" target="_self">mcd::Entity</a></td><td class="desc">An entity </td></tr>
<tr id="row_9_0_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_9_0_0_" class="arrow" onclick="toggleFolder('9_0_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d12/a00794.php" target="_self">mcd::Animal</a></td><td class="desc">An animal </td></tr>
<tr id="row_9_0_0_0_" class="even"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d79/a00798.php" target="_self">mcd::Ant</a></td><td class="desc">An ant </td></tr>
<tr id="row_9_0_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_9_0_1_" class="arrow" onclick="toggleFolder('9_0_1_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/de2/a01134.php" target="_self">mcd::Vegetal</a></td><td class="desc">A vegetal </td></tr>
<tr id="row_9_0_1_0_" class="even"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d08/a01018.php" target="_self">mcd::Mushroom</a></td><td class="desc">A mushroom </td></tr>
<tr id="row_9_0_1_1_"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d4c/a01058.php" target="_self">mcd::Plant</a></td><td class="desc">A plant </td></tr>
<tr id="row_9_1_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_9_1_" class="arrow" onclick="toggleFolder('9_1_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d41/a01030.php" target="_self">mcd::Object</a></td><td class="desc">An object </td></tr>
<tr id="row_9_1_0_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d73/a01090.php" target="_self">mcd::Stone</a></td><td class="desc">A stone </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#df/dce/a00974" target="_self">mcd::ContraptionAttr</a></td><td class="desc">A struct to define <b><a class="el" href="df/d12/a00942.php" title="A contraption. ">Contraption</a></b> attributes </td></tr>
<tr id="row_11_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_11_" class="arrow" onclick="toggleFolder('11_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d6e/a00966.php" target="_self">mcd::Date</a></td><td class="desc">A class to play with dates </td></tr>
<tr id="row_11_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/daf/a00970.php" target="_self">mcd::DateTime</a></td><td class="desc">A class to play with dates and times </td></tr>
<tr id="row_12_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_12_" class="arrow" onclick="toggleFolder('12_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::exception</b></td><td class="desc">STL class </td></tr>
<tr id="row_12_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/daf/a00830.php" target="_self">mcd::AssertionException</a></td><td class="desc">An exception thrown by my assert's implementation </td></tr>
<tr id="row_12_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d8e/a01050.php" target="_self">mcd::PathfindingException</a></td><td class="desc">All exceptions that could be thrown by the pathfinding algorithm </td></tr>
<tr id="row_13_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d7a/a00982.php" target="_self">mcd::Fraction</a></td><td class="desc">A class to manage fractions </td></tr>
<tr id="row_14_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d46/a00890.php" target="_self">mcd::Check::has_istream_operator&lt; T &gt;</a></td><td class="desc">A template class to test if T has an istream operator </td></tr>
<tr id="row_15_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d50/a00882.php" target="_self">mcd::Check::has_ostream_operator&lt; T &gt;</a></td><td class="desc">A template class to test if T has an ostream operator </td></tr>
<tr id="row_16_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d69/a00878.php" target="_self">mcd::Check::has_size_method&lt; T &gt;</a></td><td class="desc">Verify if an object has a size method </td></tr>
<tr id="row_17_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_17_" class="arrow" onclick="toggleFolder('17_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d7b/a00986.php" target="_self">mcd::Hostile</a></td><td class="desc">A class to derivate from when the thing can attack </td></tr>
<tr id="row_17_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d12/a00794.php" target="_self">mcd::Animal</a></td><td class="desc">An animal </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_18_" class="arrow" onclick="toggleFolder('18_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d7a/a00990.php" target="_self">mcd::Identifier</a></td><td class="desc">A class to store some identify datas </td></tr>
<tr id="row_18_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d8a/a01062.php" target="_self">mcd::Player&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_19_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/dd0/a00994.php" target="_self">mcd::IOConfig</a></td><td class="desc">A class to configure inputs and outputs </td></tr>
<tr id="row_20_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_20_" class="arrow" onclick="toggleFolder('20_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::ios_base</b></td><td class="desc">STL class </td></tr>
<tr id="row_20_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_20_0_" class="arrow" onclick="toggleFolder('20_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::basic_ios&lt; Char &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_20_0_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_20_0_0_" class="arrow" onclick="toggleFolder('20_0_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::basic_ostream&lt; Char &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_20_0_0_0_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_20_0_0_0_" class="arrow" onclick="toggleFolder('20_0_0_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::ostream</b></td><td class="desc">STL class </td></tr>
<tr id="row_20_0_0_0_0_"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/df0/a00934.php" target="_self">mcd::ThreadCout</a></td><td class="desc">A class to use std::cout thread safe </td></tr>
<tr id="row_21_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d0a/a00850.php" target="_self">mcd::Check::is_array&lt; T &gt;</a></td><td class="desc">A template class to test if T is an array, a vector or a map </td></tr>
<tr id="row_22_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d2a/a00874.php" target="_self">mcd::Check::is_duration&lt; T &gt;</a></td><td class="desc">A template class to test if T is a chrono::duration </td></tr>
<tr id="row_23_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d67/a01070.php" target="_self">mcd::Check::is_minded_ptr&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::shared_ptr, a std::unique_ptr or a std::weak_ptr </td></tr>
<tr id="row_24_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/dd3/a00902.php" target="_self">mcd::Check::is_object&lt; T &gt;</a></td><td class="desc">A template class to test if T is an unknown object </td></tr>
<tr id="row_25_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d2f/a00854.php" target="_self">mcd::Check::is_pair&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_26_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d79/a00898.php" target="_self">mcd::Check::is_printable&lt; T &gt;</a></td><td class="desc">A template class to test if T is printable </td></tr>
<tr id="row_27_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d41/a00862.php" target="_self">mcd::Check::is_quatuor&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_28_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d98/a00870.php" target="_self">mcd::Check::is_smatch&lt; T &gt;</a></td><td class="desc">A template class to test if T is a string regex match </td></tr>
<tr id="row_29_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/dd8/a00906.php" target="_self">mcd::Check::is_special_struct&lt; T &gt;</a></td><td class="desc">A template class to test if T is a special struct </td></tr>
<tr id="row_30_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/db2/a00866.php" target="_self">mcd::Check::is_string&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::string </td></tr>
<tr id="row_31_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/df7/a01074.php" target="_self">mcd::Check::is_thread_ptr&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::shared_ptr&lt;thread&gt;, a std::unique_ptr&lt;thread&gt;, a std::weak_ptr&lt;thread&gt; or a thread* </td></tr>
<tr id="row_32_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d66/a00858.php" target="_self">mcd::Check::is_trio&lt; T &gt;</a></td><td class="desc">A template class to test if T is a std::pair </td></tr>
<tr id="row_33_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d87/a00846.php" target="_self">mcd::Check::is_vector&lt; T &gt;</a></td><td class="desc">A template class to test if T is a vector </td></tr>
<tr id="row_34_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d9a/a00998.php" target="_self">mcd::Logger</a></td><td class="desc">A class to log some messages </td></tr>
<tr id="row_35_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d2b/a01010.php" target="_self">mcd::Map</a></td><td class="desc">A class to manage a map and that implement some pathfinding algorithms </td></tr>
<tr id="row_36_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#dc/d81/a01006" target="_self">mcd::MapMove</a></td><td class="desc">A struct to know informations about th movement of something in the map </td></tr>
<tr id="row_37_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d56/a01014.php" target="_self">mcd::Matrix&lt; C &gt;</a></td><td class="desc">A class to represent matrix </td></tr>
<tr id="row_38_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#d1/d3d/a01110" target="_self">mcd::Node&lt; T &gt;</a></td><td class="desc">A struct to define a node for the tree </td></tr>
<tr id="row_39_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_39_" class="arrow" onclick="toggleFolder('39_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/dd8/a01022.php" target="_self">mcd::NotCopyable</a></td><td class="desc">A class to let some other not to be copyable </td></tr>
<tr id="row_39_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_39_0_" class="arrow" onclick="toggleFolder('39_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d40/a00946.php" target="_self">mcd::Crypto</a></td><td class="desc">A class to be the parent for every crypt class </td></tr>
<tr id="row_39_0_0_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d39/a00950.php" target="_self">mcd::Cesar</a></td><td class="desc">A class to use the cesar algorithm for encryption </td></tr>
<tr id="row_39_0_1_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d9c/a00958.php" target="_self">mcd::MyCrypt</a></td><td class="desc">A class to test a homemade algorithm for encryption </td></tr>
<tr id="row_39_0_2_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d88/a00962.php" target="_self">mcd::RSA</a></td><td class="desc">A class to use the <a class="el" href="df/d88/a00962.php" title="A class to use the RSA algorithm for encryption. ">RSA</a> algorithm for encryption </td></tr>
<tr id="row_39_0_3_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/dca/a00954.php" target="_self">mcd::SHA2</a></td><td class="desc">An implementation of sha256 encryption </td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d02/a01026.php" target="_self">mcd::NotInstantiable</a></td><td class="desc">Let a class being only an abstract class </td></tr>
<tr id="row_41_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/dbc/a01038.php" target="_self">mcd::Path</a></td><td class="desc">A class to manage a path computed by the map </td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_42_" class="arrow" onclick="toggleFolder('42_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d56/a01042.php" target="_self">mcd::Pathfinding</a></td><td class="desc">A class to implement some pathfinding algorithms </td></tr>
<tr id="row_42_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d17/a01046.php" target="_self">mcd::PathfindingDijkstra</a></td><td class="desc">An implementation of the Dijkstra algorithm </td></tr>
<tr id="row_43_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d91/a01034.php" target="_self">mcd::PathfindingNode</a></td><td class="desc">A node for the path </td></tr>
<tr id="row_44_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d57/a01054.php" target="_self">mcd::PathfindingProblem</a></td><td class="desc">A class to group every pathfinding problems in one way to use it </td></tr>
<tr id="row_45_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_45_" class="arrow" onclick="toggleFolder('45_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>PlayerParent</b></td><td class="desc"></td></tr>
<tr id="row_45_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_45_0_" class="arrow" onclick="toggleFolder('45_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/dfb/a01066.php" target="_self">mcd::PlayerAbstraction&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_45_0_0_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d8a/a01062.php" target="_self">mcd::Player&lt; PlayerParent &gt;</a></td><td class="desc">A player that can be a child from any class </td></tr>
<tr id="row_46_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d1e/a01126.php" target="_self">mcd::Point</a></td><td class="desc">A struct to define a point in space </td></tr>
<tr id="row_47_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_47_" class="arrow" onclick="toggleFolder('47_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/dba/a01078.php" target="_self">mcd::PureVirtual</a></td><td class="desc">A class to make some other to be abstract class </td></tr>
<tr id="row_47_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d38/a00926.php" target="_self">mcd::ConsoleCursor</a></td><td class="desc">A class to play with the cursor in the console </td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#db/d32/a01122" target="_self">mcd::quatuor&lt; T, U, V, W &gt;</a></td><td class="desc">A container for four values </td></tr>
<tr id="row_49_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_49_" class="arrow" onclick="toggleFolder('49_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::queue&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_49_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_0_" class="arrow" onclick="toggleFolder('49_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d71/a00814.php" target="_self">mcd::queue&lt; T, Container &gt;</a></td><td class="desc">An implementation of std::queue </td></tr>
<tr id="row_49_0_0_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d60/a00818.php" target="_self">mcd::t_queue&lt; T, Container &gt;</a></td><td class="desc">An thread-safe implementation of queue </td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/df1/a01082.php" target="_self">mcd::Referenced&lt; C &gt;</a></td><td class="desc">A class to have a reference to the class' pointer </td></tr>
<tr id="row_51_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/df5/a01086.php" target="_self">mcd::RNG&lt; T, U &gt;</a></td><td class="desc">A class to simplify the use of random </td></tr>
<tr id="row_52_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_52_" class="arrow" onclick="toggleFolder('52_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::stack&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_52_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_52_0_" class="arrow" onclick="toggleFolder('52_0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/dad/a00806.php" target="_self">mcd::stack&lt; T, Container &gt;</a></td><td class="desc">An implementation of std::stack </td></tr>
<tr id="row_52_0_0_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/dfd/a00810.php" target="_self">mcd::t_stack&lt; T, Container &gt;</a></td><td class="desc">An thread-safe implementation of stack </td></tr>
<tr id="row_53_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/dea/a01094.php" target="_self">mcd::Test</a></td><td class="desc">A static class to test code </td></tr>
<tr id="row_54_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d17/a01098.php" target="_self">mcd::Threadable&lt; C &gt;</a></td><td class="desc">A class to let another one to be threadable with update() member in a thread </td></tr>
<tr id="row_55_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_55_" class="arrow" onclick="toggleFolder('55_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d17/a01098.php" target="_self">mcd::Threadable&lt; Timer &gt;</a></td><td class="desc"></td></tr>
<tr id="row_55_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d4e/a01106.php" target="_self">mcd::Timer</a></td><td class="desc">A timer to do something at the end </td></tr>
<tr id="row_56_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d16/a00930.php" target="_self">mcd::ThreadEndlCout</a></td><td class="desc">A class to use std::endl in <a class="el" href="d0/df0/a00934.php" title="A class to use std::cout thread safe. ">ThreadCout</a> </td></tr>
<tr id="row_57_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_57_" class="arrow" onclick="toggleFolder('57_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/da7/a01102.php" target="_self">mcd::Time</a></td><td class="desc">A class to play with dates </td></tr>
<tr id="row_57_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/daf/a00970.php" target="_self">mcd::DateTime</a></td><td class="desc">A class to play with dates and times </td></tr>
<tr id="row_58_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d40/a01114.php" target="_self">mcd::Tree&lt; T &gt;</a></td><td class="desc">A class to manage a binary tree </td></tr>
<tr id="row_59_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#dd/d09/a01118" target="_self">mcd::trio&lt; T, U, V &gt;</a></td><td class="desc">A container for three values </td></tr>
<tr id="row_60_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_60_" class="arrow" onclick="toggleFolder('60_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><b>std::vector&lt; T &gt;</b></td><td class="desc">STL class </td></tr>
<tr id="row_60_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d61/a01130.php" target="_self">mcd::vector&lt; C &gt;</a></td><td class="desc">Add some features to std::vector </td></tr>
<tr id="row_61_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d08/a00244.php#d2/dd5/a01002" target="_self">mcd::WorldDimensions</a></td><td class="desc">An object to group the dimensions of the world </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.11-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
	<ul>
		<li class="footer">
			<?php
				echo $text;
			?>
		</li>
	</ul>
</div>
</body>
</html>
